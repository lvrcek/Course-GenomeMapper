name: build

on: 
  push:
    branches: [main]
  pull_request:
    brancehs: [main]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        config:
        - {
            name: "Ubuntu_Latest_GCC_9.3",
            os: "ubuntu-latest",
            compiler: "g++"
          }
        - {
            name: "Ubuntu_Latest_Clang_11.0",
            os: "ubuntu-latest",
            compiler: "clang++"
          }
        - {
            name: "Ubuntu_18.04_GCC_4.8",
            os: "ubuntu-18.04",
            compiler: "g++-4.8"
          }
        - {
            name: "Ubuntu_18.04_CLang_4.0",
            os: "ubuntu-18.04",
            compiler: "clang++-4.0"
          }
        - {
            name: "MacOS_11_GCC_9.4",
            os: "macos-11",
            compiler: "g++"
          }
        - {
            name: "MacOS_Latest_Clang_11.0",
            os: "macos-latest",
            compiler: "clang++"
          }
    
    name: ${{ matrix.config.name }}

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2

      - if: ${{ matrix.config.name == 'Ubuntu_18.04_GCC_4.8' }}
        uses: egor-tensin/setup-gcc@v1
        with:
          version: "4.8"
          platform: x64

      - if: ${{ matrix.config.name == 'Ubuntu_18.04_CLang_4.0' }}
        uses: egor-tensin/setup-clang@v1
        with:
          version: "4.0"
          platform: x64

      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        env:
          CXX: ${{ matrix.config.compiler }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: |
          bin/ivory_mapper --version
          bin/ivory_mapper_test
